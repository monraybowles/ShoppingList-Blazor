@page
@model WebClient.Pages.IndexModel
@{
    //ViewData["Title"] = "Home page";
}
<section>
  <div class="row">
    <div class="col-md-8 mb-4">
      <div class="card mb-4">
        <div class="card-header py-3">
          <h5 class="mb-0">Credit Card details</h5>
        </div>
        <div class="card-body">
          <form method="post">
           
            <!-- 2 column grid layout with text inputs for the first and last names -->
           <h6 class="mb-3">Select Card Provider</h6>
           
           <div class="form-check">
                @for (var i = 0; i < Model.ShopItems.Count(); i++)
                {
                     <input class="form-check-input" type="radio" asp-for="Shop.ItemName"  name="size" id="@Model.ShopItems[i].Text"
                       value="@Model.ShopItems[i].Text" /> 
                      @Model.ShopItems[i].Text
                      <br>
                 }
            </div>
             <input asp-for="Shop.ItemName" class="form-control" id="txtCardType"  type="hidden" /> 

            <div class="row mb-4">
            </div>
            <div class="row mb-2">
              <div class="col-4 w-12">
                <div class="form-outline">
                   <input asp-for="Shop.ItemName" class="form-control" /> 
                    <label asp-for="Shop.ItemName" class="form-label"></label>
                  
                 
                </div>
              </div>
             
            </div>


            
             <div class="row mb-4">
              <div class="col-8 w-800">
                <div class="form-outline">
                    <table>
                          <tr>
                            <td>                                
                                <div id="output" class="text-danger" ></div>
                            </td>
                           
                        </tr>
                        <tr>
                            <td>
                                 @Html.ValidationSummary(true)
                                 <span asp-validation-for="Shop.ItemName"  class="text-danger"></span>
                                  @Html.ValidationMessage("CustomError")
                            </td>
                           
                        </tr>
                        
                    </table>                  
                    
                    </div>
                     
                    </div>
              </div>
            
            <button class="btn btn-primary btn-lg btn-block" disabled  id="btnSave" type="submit">
              Continue to checkout
            </button>
           </form>
          </>
        </div>
        
      </div>
      
    </div>
     
   </div>

</section>
   <table class="table">
            @if (Model.Shoplist == null)
            {
            <thead class="table-light te mb-3 card-header py-3">
                <tr>
                </tr>
            </thead>
            }
            else
            {
             
            <thead class="table-light te mb-3 card-header py-3">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Shop.ItemName)
                    </th>
                     <th>
                        @Html.DisplayNameFor(model => model.Shop.ItemImage)
                    </th>
                 
                    <th>
                        @Html.DisplayNameFor(model => model.Shop.ModifiedDate)
                    </th>
                    <th></th>
                </tr>
            </thead>
            
     }

                @if (Model.Shoplist == null)
                {
                     <tbody>
              
                            <tr class="table-active alert-danger">
                                <td class="col-10">
                                  <h6 class="mb-3 alert-danger">
                                   No Credit Card Details have been added to our system - No availible Data!
                                  </h6>
                              </td>
                            </tr>
               
                        </tbody>
                }
                else
                {
                    <tbody>
                            @foreach (var item in Model.Shoplist)
                            {

                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemName)
                                </td>
                               
                                <td>
                                    @Html.DisplayFor(modelItem => item.ModifiedDate)
                                </td>
                            </tr>
                            }
            </tbody>
    }
    
        </table>
               

   

    @*<script>

            let txtCardType = document.getElementById("txtCardType");
            let x = document.getElementById("txtCardNumber");

            let txtMonth = document.getElementById("txtMonth");
            let txtYear = document.getElementById("txtYear");
            let txtCVV = document.getElementById("txtCVV");

            x.addEventListener("focus", myFocusFunction, true);
            x.addEventListener("blur", myBlurFunction, true);
          
            txtMonth.addEventListener("focus", myFocusFunction, true);
            txtMonth.addEventListener("blur", myBlurFunction, true);

            txtYear.addEventListener("focus", myFocusFunction, true);
            txtYear.addEventListener("blur", myBlurFunction, true);

            txtCVV.addEventListener("focus", myFocusFunction, true);
            txtCVV.addEventListener("blur", myBlurFunction, true);

            var selectedCardType = '';
            let btnSave = document.getElementById("btnSave");
           
            function returnCreditCardTypes()
            {
                // x = '';
                 var radioButtons = document.querySelectorAll('input[name="size"]');
                 for (const radioButton of radioButtons) 
                 {
                     if (radioButton.checked)
                     {
                        selectedCardType = radioButton.value;   
                        
                         txtCardType.value = selectedCardType; 
                       // console.log(selectedCardType);
                        break;
                     }
                 }
            }
           function checkEmptyValues()
           {
               if ((txtMonth.value == '') || (txtYear.value == '') || (txtCVV.value == '') || (x.value == ''))
                {
                     btnSave.disabled = true;
                }
                else 
                {
                     btnSave.disabled = false;
                }
           
            }
            function myFocusFunction() 
            {
               // console.log(selectedCardType);
                checkEmptyValues();
                document.getElementById("txtCardNumber").style.backgroundColor = "Yellow";    
                txtCVV.style.backgroundColor = "Yellow";   
                txtYear.style.backgroundColor = "Yellow";   
                txtMonth.style.backgroundColor = "Yellow";   

                returnCreditCardTypes();
               

                cardnumber(x, selectedCardType);
            }

            function myBlurFunction() 
            {
              // console.log(selectedCardType);
               checkEmptyValues();
               document.getElementById("txtCardNumber").style.backgroundColor = "";
                txtCVV.style.backgroundColor = "";   
                txtYear.style.backgroundColor = "";   
                txtMonth.style.backgroundColor = "";   
               returnCreditCardTypes();
               
               cardnumber(x, selectedCardType);
               

            }

              // Credit Card Testing ------- 
                //console.log(checkLuhn('5555555555554444')); // MC, expected true
                //console.log(checkLuhn('378282246310005')); // AmEx, expected true
                //console.log(checkLuhn('4111 1111 1111 1111')); // Visa, expected true
                //console.log(checkLuhn('4111111111111112')); // Visa, expected false
                    

            function cardnumber(inputtxt, selectedCardType)
            {

                console.log(selectedCardType);
                // Check American Express
                if (selectedCardType == 'AMEX') // Todo is to read card names , instead of hard coding !!!!!!!!!!!!!!!!
                
                {
                     var cardno = /^(?:3[47][0-9]{13})$/;
                   if(inputtxt.value.match(cardno))
                    {

                       //  btnSave.disabled = false;
                         console.log('valid')
                         return true;
                    }
                     else
                    {
                     // alert("Not a valid Amercican Express credit card number!");
                        btnSave.disabled = true;
                         document.getElementById("txtCardNumber").style.backgroundColor = "Red";    
                         console.log('invalid')
                         return false;
                    }

                }
             
                
                // Check for Visa 
                if (selectedCardType == 'VISA') {                         
                  var cardnoVisa = /^(?:4[0-9]{12}(?:[0-9]{3})?)$/;
                  if (inputtxt.value.match(cardnoVisa))
                    {
                         // btnSave.disabled = false;
                         console.log('valid')
                         return true;
                    }
                     else
                    {
                     // alert("Not a valid Visa credit card number!");
                      document.getElementById("txtCardNumber").style.backgroundColor = "Red";    
                        btnSave.disabled = true;
                         console.log('invalid')
                         return false;
                    }
                  }
                    // Check for Mastercard number
                  if (selectedCardType == 'MasterCard') {
                       var cardnoMaster = /^(?:5[1-5][0-9]{14})$/;
                      if(inputtxt.value.match(cardnoMaster))
                            {
                            // alert("Not a valid Mastercard number!");
                            //  btnSave.disabled = false;
                               console.log('valid')
                               return true;
                            }
                          else
                            {
                              btnSave.disabled = true;
                              console.log('invalid')
                              return false;
                      }

                  }

                  if (selectedCardType == 'Discover') {

                       var cardnoDiscover = /^(?:6(?:011|5[0-9][0-9])[0-9]{12})$/;
                          if(inputtxt.value.match(cardnoDiscover))
                            {
                             console.log('valid')
                             // btnSave.disabled = false;
                              return true;
                            }
                              else
                            {
                             document.getElementById("txtCardNumber").style.backgroundColor = "Red";    
                             btnSave.disabled = true;
                            // alert("Not a valid Discover card number!");
                            return false;
                        }

                  }*@
                 


                   // Check for Mastercard number
                     


                            // Check for Discover card
                       @*     if (selectedCardType == 'Dinners') {
                                  // Check for Dinners card
                                   var cardnoDinners = /^(?:3(?:0[0-5]|[68][0-9])[0-9]{11})$/;
                                  if(inputtxt.value.match(cardnoDinners))
                                    {
                                      console.log('valid')
                                      //btnSave.disabled = false;
                                      return true;
                                    }
                                  else
                                    {
                                    document.getElementById("txtCardNumber").style.backgroundColor = "Red";    
                                    btnSave.disabled = true;
                                    // alert("Not a valid Dinners Club card number!");
                                    return false;
                                    }
                            }
*@

                          


            }
              





           


   @* </script>*@
